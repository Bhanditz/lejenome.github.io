<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"
 xmlns:dc="http://purl.org/dc/elements/1.1/"
 xml:base="https://lejenome.github.io/">
  <channel>
    <atom:link href="https://lejenome.github.io/rss.xml" rel="self" type="application/rss+xml" />
    <title>Moez Bouhlel [lejenome]</title>
    <description>Self-taught programmer, CS Student and FOSS contributor</description>
    <language>en</language>
    <link>https://lejenome.github.io/</link>

    <item>
      <title>Simple feedback form implementation for static websites</title>
      <link>https://lejenome.github.io/post/6.html</link>
      <pubDate>Wed, 05 Oct 2016 00:00:00 GMT</pubDate>
      <guid>https://lejenome.github.io/post/6.html</guid>
      <dc:creator>Moez Bouhlel</dc:creator>
      <category domain="https://lejenome.github.io/#!tag/javascript">javascript</category>
<category domain="https://lejenome.github.io/#!tag/slack">slack</category>
      <description>&lt;p&gt;Recently, I wanted to add a feedback form to my resume page to help my friends
review it. I was using GitHub pages to host my static web site and I didn't
want to host the server side of the feedback on a different server. So I was
looking for a simple solution that works well with my static website. Most of
the available ones were either paid or have too many unneeded features.&lt;/p&gt;
&lt;p&gt;At the end, I decided to use my &lt;a href="https://slack.com/"&gt;Slack&lt;/a&gt; team to receive
feedbacks. It does not require any third-party library or any server side code.
And it's very simple to implement:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Create a Slack team if you don't have one.&lt;/li&gt;
&lt;li&gt;Add an &lt;a href="https://api.slack.com/incoming-webhooks"&gt;Incoming Webhook&lt;/a&gt; URL to a
   channel on your team. It's a simple URL that you can send feedbacks to.&lt;/li&gt;
&lt;li&gt;Finally, add your client side implementation. This is a simple one:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;form&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;feedback&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;textarea&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;required&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;textarea&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;input&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;submit&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;send feedback&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;input&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;form&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;form&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;feedback&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;form&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;submit&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;preventDefault&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;YOUR_WEBHOOK_URL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;method&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;POST&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;// You should use POST method&lt;/span&gt;
        &lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stringify&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
            &lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;form&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;// the feedback message&lt;/span&gt;
            &lt;span class="nx"&gt;parse&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;none&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;// tell Slack it&amp;#39;s not a formated text&lt;/span&gt;
        &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;Improvements:&lt;/h4&gt;
&lt;p&gt;You can add more entries to the send JSON. Check Slack
&lt;a href="https://api.slack.com/methods/chat.postMessage"&gt;documentation&lt;/a&gt; for more
details. The most useful ones are &lt;code&gt;username&lt;/code&gt; and &lt;code&gt;icon_emoji&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;You can set different a &lt;code&gt;username&lt;/code&gt; and different a &lt;code&gt;icon_emoji&lt;/code&gt; entry for every
page. For example, you send this JSON from your resume page:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;text&amp;quot;&lt;/span&gt;       &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;THE FEEDBACK MESSAGE&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;parse&amp;quot;&lt;/span&gt;      &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;none&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;username&amp;quot;&lt;/span&gt;   &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;resume&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;quot;icon_emoji&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;:briefcase:&amp;quot;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</description>
    </item>

    <item>
      <title>[MTCFSS] Recommendations For IT Students</title>
      <link>https://lejenome.github.io/post/4.html</link>
      <pubDate>Tue, 04 Oct 2016 00:00:00 GMT</pubDate>
      <guid>https://lejenome.github.io/post/4.html</guid>
      <dc:creator>Moez Bouhlel</dc:creator>
      <category domain="https://lejenome.github.io/#!tag/mtcfss">mtcfss</category>
<category domain="https://lejenome.github.io/#!tag/note">note</category>
      <description>&lt;p&gt;This is a list of useful websites and tools to check for Computer Science
students.&lt;/p&gt;
&lt;h2&gt;Challenges:&lt;/h2&gt;
&lt;h3&gt;Algorithms and Programming&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.hackerrank.com/"&gt;HackerRank&lt;/a&gt;: Different-level exercises for many
domains and challenges.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://projecteuler.net/"&gt;Project Euler&lt;/a&gt;: Algorithms challenges, you can find
them on &lt;a href="https://www.hackerrank.com/projecteuler"&gt;ProjectEuler+&lt;/a&gt; challenge on
HackerRank too.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;System development and administration&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://eudyptula-challenge.org/"&gt;The Eudyptula Challenge&lt;/a&gt;: Series of
programming exercises for Linux kernel development.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Other&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://devpost.com/hackathons"&gt;DevPost&lt;/a&gt;: Online and in-person challenges with
prizes to win.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Tutorials:&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.developpez.com"&gt;Developpez.com&lt;/a&gt;: Club des d√©veloppeurs et IT pro.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;E-learning:&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.coursera.org/"&gt;Coursera&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.edx.org"&gt;Edx&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.codecademy.com/"&gt;Codecademy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.udacity.com/"&gt;Udacity&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://lagunita.stanford.edu/"&gt;Stanford Online Lagunita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://ocw.mit.edu/"&gt;MIT OpenCourseWare&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Usefull tools:&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com"&gt;GitHub&lt;/a&gt;: #1 Online project hosting service.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://c9.io/"&gt;Could9&lt;/a&gt;: Full-featured development environment, in the cloud.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://zealdocs.org/"&gt;Zeal&lt;/a&gt;: offline documentation for 195+ programming
  languages and APIs.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://devdocs.io/"&gt;DevDocs&lt;/a&gt;: Online APIs documentation.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Freelancer &amp;amp; Money:&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.topcoder.com"&gt;TopCoder&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.upwork.com/"&gt;UpWork&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.freelancer.com/"&gt;Freelancer&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;CV:&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.linkedin.com/"&gt;LinkedIn&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://stackoverflow.com/jobs/cv"&gt;StackOverFlow CV&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>

    <item>
      <title>Physical boot to virtual EFI Windows machine</title>
      <link>https://lejenome.github.io/post/5.html</link>
      <pubDate>Thu, 15 Sep 2016 00:00:00 GMT</pubDate>
      <guid>https://lejenome.github.io/post/5.html</guid>
      <dc:creator>Moez Bouhlel</dc:creator>
      <category domain="https://lejenome.github.io/#!tag/linux">linux</category>
<category domain="https://lejenome.github.io/#!tag/qemu">qemu</category>
<category domain="https://lejenome.github.io/#!tag/kvm">kvm</category>
<category domain="https://lejenome.github.io/#!tag/windows">windows</category>
      <description>&lt;p&gt;Even Linux is my main system, I frequently need to use Windows for school
homework when Mono does not support desired features. Running Windows inside a
virtual machine is always enough expect few cases. The best solution was to
setup a single windows system accessible from booth the virtual machine and
from the physical dual boot.&lt;/p&gt;
&lt;p&gt;For the virtual machine, we will use &lt;em&gt;Qemu/KVM&lt;/em&gt; with &lt;em&gt;Virtio&lt;/em&gt; devices and a disk
partition for Windows.&lt;/p&gt;
&lt;p&gt;First, you need to install Windows on your PC to get the boot entry with right
configurations (I couldn't find a work around BCD boot entry issue other than
this one). Then reboot to your Linux system to reinstall Windows on the same
partition but using the virtual machine this time.&lt;/p&gt;
&lt;p&gt;Before we start, check that &lt;code&gt;loop&lt;/code&gt; and &lt;code&gt;linear&lt;/code&gt; modules are loaded:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo modprobe loop
sudo modprobe linear
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Because the virtual machine need whole disk with booth the Windows partition
and the EFI partition, We need to create a virtual RAID. Let's create a small
file to hold the EFI partition:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;dd &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/dev/zero &lt;span class="nv"&gt;of&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;efi &lt;span class="nv"&gt;count&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;200000
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now you have &lt;code&gt;efi&lt;/code&gt; file of 100 MB (200000 * 512 Bytes). Next, we create a
loopback device from the file:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo losetup -f efi
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;It will assign the first available loopback device to the file. We will assume
that the assigned device is &lt;code&gt;/dev/loop0&lt;/code&gt;. To check the assigned device:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;losetup -a
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Next, we will merge the loopback device and the real Windows partition into a
single linear RAID disk image (We will assume that the windows partition is
&lt;code&gt;/dev/sda2&lt;/code&gt;):&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo mdadm --build --verbose /dev/md0 --chunk&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;16&lt;/span&gt; --level&lt;span class="o"&gt;=&lt;/span&gt;linear --raid-devices&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt; /dev/loop0 /dev/sda2
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Time to create the partitions table of the new RAID disk with reusing the same
physical Windows partition. For this step, we will use &lt;em&gt;parted&lt;/em&gt; utility. You
can use other tools on your own. We need to get the size of real Windows
partition on sectors.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo parted /dev/sda unit s print
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Partition your virtual RAID disk:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo parted /dev/md0
&lt;span class="o"&gt;(&lt;/span&gt;parted&lt;span class="o"&gt;)&lt;/span&gt; mktable gpt
&lt;span class="o"&gt;(&lt;/span&gt;parted&lt;span class="o"&gt;)&lt;/span&gt; mkpart primary ntfs -WINDOW_PARITION_SIZE -1
&lt;span class="o"&gt;(&lt;/span&gt;parted&lt;span class="o"&gt;)&lt;/span&gt; mkpart primary fat32 &lt;span class="m"&gt;0&lt;/span&gt; -WINDOW_PARITION_SIZE
&lt;span class="o"&gt;(&lt;/span&gt;parted&lt;span class="o"&gt;)&lt;/span&gt; quit
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Your final layout will have 2 partitions; Windows partition &lt;code&gt;/dev/md0p1&lt;/code&gt; and
EFI partition &lt;code&gt;/dev/md0p2&lt;/code&gt;. You may get few warning messages when
creating partitions, ignore them. The new partitions need to be formatted.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo mkfs.ntfs -f -L Windows -C /dev/md0p1
sudo mkfs.msdos -F &lt;span class="m"&gt;32&lt;/span&gt; -n EFI /dev/md0p2
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now, you are ready to launch the virtual machine and reinstall Windows. Change
&lt;code&gt;/dev/md0&lt;/code&gt; owner to the same user &lt;em&gt;Qemu&lt;/em&gt; is running as and install &lt;em&gt;ovmf&lt;/em&gt; EFI
bios for &lt;em&gt;Qemu&lt;/em&gt;, in my case, it will be available at
&lt;code&gt;/usr/share/ovmf/ovmf_x64.bin&lt;/code&gt;.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;qemu-system-x86_64 &lt;span class="se"&gt;\&lt;/span&gt;
    -enable-kvm &lt;span class="se"&gt;\&lt;/span&gt;
    -bios /usr/share/ovmf/ovmf_x64.bin &lt;span class="se"&gt;\&lt;/span&gt;
    -drive &lt;span class="nv"&gt;file&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/dev/md0,media&lt;span class="o"&gt;=&lt;/span&gt;disk,format&lt;span class="o"&gt;=&lt;/span&gt;raw &lt;span class="se"&gt;\&lt;/span&gt;
    -netdev user,id&lt;span class="o"&gt;=&lt;/span&gt;windowsnic,hostname&lt;span class="o"&gt;=&lt;/span&gt;windowshost &lt;span class="se"&gt;\&lt;/span&gt;
    -device virtio-net,netdev&lt;span class="o"&gt;=&lt;/span&gt;windowsnic &lt;span class="se"&gt;\&lt;/span&gt;
    -cpu host &lt;span class="se"&gt;\&lt;/span&gt;
    -m 2G &lt;span class="se"&gt;\&lt;/span&gt;
    -vga qxl &lt;span class="se"&gt;\&lt;/span&gt;
    -usbdevice tablet
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Adapt &lt;em&gt;Qemu&lt;/em&gt; script to your use case. You may need to download and install
&lt;a href="https://fedoraproject.org/wiki/Windows_Virtio_Drivers"&gt;&lt;em&gt;Virtio&lt;/em&gt; drivers&lt;/a&gt; on
your guest machine. After each reboot, you need to create the loopback device,
merge the two partitions into the RAID disk and change the owner of the device.&lt;/p&gt;
&lt;p&gt;Credit to &lt;a href="file:///usr/share/doc/arch-wiki/html/en/QEMU.html#Simulate_virtual_disk_with_MBR_using_linear_RAID"&gt;Arch Linux Wiki&lt;/a&gt;.
Enjoy!&lt;/p&gt;</description>
    </item>

    <item>
      <title>[MTCFSS] Python Training ‚Äì Get Ready</title>
      <link>https://lejenome.github.io/post/3.html</link>
      <pubDate>Tue, 09 Feb 2016 00:00:00 GMT</pubDate>
      <guid>https://lejenome.github.io/post/3.html</guid>
      <dc:creator>Moez Bouhlel</dc:creator>
      <category domain="https://lejenome.github.io/#!tag/mtcfss">mtcfss</category>
<category domain="https://lejenome.github.io/#!tag/python">python</category>
<category domain="https://lejenome.github.io/#!tag/django">django</category>
      <description>&lt;p&gt;This is our check list for any member interested to join the training:&lt;/p&gt;
&lt;h2&gt;Tools:&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;For Windows Users:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Python 3.5 (&lt;a href="https://www.python.org/ftp/python/3.5.1/python-3.5.1-amd64.exe"&gt;64bit&lt;/a&gt;)
  (&lt;a href="https://www.python.org/ftp/python/3.5.1/python-3.5.1.exe"&gt;32bit&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://desktop.github.com/"&gt;GitHub Desktop&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://git-for-windows.github.io/"&gt;Git For Windows&lt;/a&gt; (optional but recommended)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can choose your preferred Text Editor or IDE to write python code, or you
can pick one of our recommendation list:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.jetbrains.com/pycharm-edu/"&gt;PyCharm&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;IDLE3 (already integrated with Python installer)&lt;/li&gt;
&lt;li&gt;Visual Studio + Python Tools extension&lt;/li&gt;
&lt;li&gt;&lt;a href="http://ninja-ide.org/home/"&gt;Ninja-IDE&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.pydev.org/"&gt;PyDev&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://netbeans.org/"&gt;Netbeans&lt;/a&gt; &amp;gt;= 8.1 + Python plugin&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;For Linux (Ubuntu) Users:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Python 3 (should be already installed, use python3 command instead of python)&lt;/li&gt;
&lt;li&gt;Git&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can choose your preferred Text Editor or IDE or one of our suggestion list:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;PyCharm&lt;/li&gt;
&lt;li&gt;Vim / emacs / nano / ed (or cat command if you want)&lt;/li&gt;
&lt;li&gt;IDLE3&lt;/li&gt;
&lt;li&gt;Ninga-IDE&lt;/li&gt;
&lt;li&gt;Netbeans &amp;gt;= 8.1 + Python plugin&lt;/li&gt;
&lt;li&gt;IPython3 (Jupyter console)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Other: (We will keep it for Saturday)&lt;/h2&gt;
&lt;p&gt;We will use the Django Framework on the training. To install Django, you need to
use the pip command (already integrated on Python Windows installer, or install
python3-pip for Ubuntu users). Launch your console (cmd on Windows), and run:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pip install Django
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Requirements:&lt;/h2&gt;
&lt;p&gt;We will use GitHub ( http://github.com/ ) to host our projects code. To be able
to join the development, every member is required to create a GitHub account and
send us his profile link on email (&lt;a href="mailto:mtcfss@outlook.com"&gt;mtcfss@outlook.com&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;Keep in mind that GitHub is #1 code hosting service and you will mostly keep
using it outside our training on future.&lt;/p&gt;
&lt;h2&gt;Learning Sources:&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Python 3:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://openclassrooms.com/courses/apprenez-a-programmer-en-python"&gt;Open Class Room Tutorial&lt;/a&gt;
  (French)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.python.org/3/"&gt;Python Official Documentation&lt;/a&gt;:&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.python.org/3/tutorial/index.html"&gt;Official Tutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.python.org/3/library/index.html"&gt;Official Library Reference&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Django:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://openclassrooms.com/courses/developpez-votre-site-web-avec-le-framework-django"&gt;Open Class Room Tutorial&lt;/a&gt;
  (French)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.djangoproject.com/en/1.9/"&gt;Django Official Documentation&lt;/a&gt;:&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.djangoproject.com/en/1.9/intro/overview/"&gt;Official Tutorial&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Git:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://try.github.io/"&gt;GitHub Tutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://openclassrooms.com/courses/manage-your-code-with-git-and-github"&gt;Open Class Room Tutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://git-scm.com/doc"&gt;Git Official Documentation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;HTML5 &amp;amp; CSS3:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://openclassrooms.com/courses/apprenez-a-creer-votre-site-web-avec-html5-et-css3"&gt;Open Class Room Tutorial&lt;/a&gt;
  (French)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/"&gt;Mozilla Developer Network&lt;/a&gt;:&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web"&gt;Web Docs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://v4-alpha.getbootstrap.com/getting-started/introduction/"&gt;Bootstrap 4 Doc&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;JavaScript:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://openclassrooms.com/courses/dynamisez-vos-sites-web-avec-javascript"&gt;Open Class Room Tutorial&lt;/a&gt;
  (French)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/"&gt;Mozilla Developer Network&lt;/a&gt;:&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript"&gt;JavaScript Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://angular.io/docs/ts/latest/"&gt;Angular 2 Doc&lt;/a&gt;:&lt;/li&gt;
&lt;li&gt;&lt;a href="https://angular.io/docs/ts/latest/quickstart.html"&gt;Quick Start&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://angular.io/docs/ts/latest/quickstart.html"&gt;Guide&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>

    <item>
      <title>[Syteup] creating a basic plugin, segment as an example</title>
      <link>https://lejenome.github.io/post/2.html</link>
      <pubDate>Tue, 04 Nov 2014 00:00:00 GMT</pubDate>
      <guid>https://lejenome.github.io/post/2.html</guid>
      <dc:creator>Moez Bouhlel</dc:creator>
      <category domain="https://lejenome.github.io/#!tag/syteup">syteup</category>
      <description>&lt;p&gt;Here, we will add Segment support to Syteup.&lt;/p&gt;
&lt;p&gt;Segment is "a customer data hub". It makes it easy to integrate third-party
tools (analytics, advertising,...) to your application throw a all-in-one single
library.&lt;/p&gt;
&lt;p&gt;To add Segment plugin support to Syteup, we needs just 3 simple steps:&lt;/p&gt;
&lt;p&gt;1- create &lt;code&gt;plugins/segment.js&lt;/code&gt; plugin code file that will export the plugin
module to the window object:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;use strict&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;setupSegment&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;settings&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;analytics&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;analytics&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="p"&gt;[];&lt;/span&gt;
        &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;analytics&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;methods&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
            &lt;span class="s2"&gt;&amp;quot;identify&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s2"&gt;&amp;quot;group&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s2"&gt;&amp;quot;track&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s2"&gt;&amp;quot;page&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s2"&gt;&amp;quot;pageview&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s2"&gt;&amp;quot;alias&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s2"&gt;&amp;quot;ready&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s2"&gt;&amp;quot;on&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s2"&gt;&amp;quot;once&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s2"&gt;&amp;quot;off&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s2"&gt;&amp;quot;trackLink&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s2"&gt;&amp;quot;trackForm&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s2"&gt;&amp;quot;trackClick&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s2"&gt;&amp;quot;trackSubmit&amp;quot;&lt;/span&gt;
        &lt;span class="p"&gt;];&lt;/span&gt;
        &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;analytics&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;factory&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;method&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;args&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Array&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;prototype&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;slice&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;call&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;arguments&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="nx"&gt;args&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;unshift&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;method&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;analytics&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;args&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;analytics&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="p"&gt;};&lt;/span&gt;
        &lt;span class="p"&gt;};&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;analytics&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;methods&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;key&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;analytics&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;methods&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
            &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;analytics&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;analytics&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;factory&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;analytics&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;load&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;analytics-js&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
                &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;script&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createElement&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;script&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="nx"&gt;script&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="nx"&gt;script&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;analytics-js&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="nx"&gt;script&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;async&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="nx"&gt;script&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;src&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;https:&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;location&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;protocol&lt;/span&gt; &lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;https://&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;http://&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;cdn.segment.com/analytics.js/v1/&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;key&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;/analytics.min.js&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;first&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementsByTagName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;script&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
            &lt;span class="nx"&gt;first&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;parentNode&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;insertBefore&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;script&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;first&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;};&lt;/span&gt;
        &lt;span class="c1"&gt;// Add a version to keep track of what&amp;#39;s in the wild.&lt;/span&gt;
        &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;analytics&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;SNIPPET_VERSION&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;2.0.9&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="c1"&gt;// Load Analytics.js with your key, which will automatically&lt;/span&gt;
        &lt;span class="c1"&gt;// load the tools you&amp;#39;ve enabled for your account. Boosh!&lt;/span&gt;
        &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;analytics&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;load&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;settings&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;write_key&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
        &lt;span class="c1"&gt;// Make the first page call to load the integrations. If&lt;/span&gt;
        &lt;span class="c1"&gt;// you&amp;#39;d like to manually name or tag the page, edit or&lt;/span&gt;
        &lt;span class="c1"&gt;// move this call however you&amp;#39;d like.&lt;/span&gt;
        &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;analytics&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;page&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Syteup&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;segmentPlugin&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;setup&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;setupSegment&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="p"&gt;}(&lt;/span&gt;&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;what we did is to add segment code (copied from segment tutorial) into the
&lt;code&gt;setupSegment&lt;/code&gt; function, then we export it as &lt;code&gt;setup&lt;/code&gt; item on the plugin module
which should be named &lt;code&gt;segmentPlugin&lt;/code&gt;. As you note, the user depending write_key
is readed from the &lt;code&gt;settings&lt;/code&gt; object of the plugin which will be added on the
third step.&lt;/p&gt;
&lt;p&gt;2- we add a script tag to the &lt;code&gt;index.html&lt;/code&gt; file that will load the plugin code.&lt;/p&gt;
&lt;p&gt;the script tag should be included on the plugins section just before
&lt;code&gt;js/plugins.js&lt;/code&gt; tag and it should be loaded on defer mode&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt; &lt;span class="na"&gt;defer&lt;/span&gt; &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;plugins/segment.js&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;3- Finally, we add the plugin settings to the configuration file &lt;code&gt;config.json&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;option to turn on/off the plugin inside the &lt;code&gt;plugins&lt;/code&gt; option:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;plugins&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;segment&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;the plugin settings object that includes all user depending settings (here we
will need the user's write_key) on the &lt;code&gt;plugins_settings option&lt;/code&gt;:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;plugins_settings&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;segment&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;write_key&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;?????????&amp;quot;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;All Done! we are ready to test our plugin.&lt;/p&gt;
&lt;p&gt;Don't be lazy, and send me a pull request with your plugins code and other
patches to
&lt;a href="https://github.com/lejenome/syteup"&gt;https://github.com/lejenome/syteup&lt;/a&gt; !&lt;/p&gt;</description>
    </item>

    <item>
      <title>Syteup Introduction</title>
      <link>https://lejenome.github.io/post/1.html</link>
      <pubDate>Sat, 01 Nov 2014 00:00:00 GMT</pubDate>
      <guid>https://lejenome.github.io/post/1.html</guid>
      <dc:creator>Moez Bouhlel</dc:creator>
      <category domain="https://lejenome.github.io/#!tag/syteup">syteup</category>
<category domain="https://lejenome.github.io/#!tag/introduction">introduction</category>
      <description>&lt;h1&gt;Syteup&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;Syteup&lt;/strong&gt; (a complete rewrite of &lt;a href="https://github.com/rigoneri/syte"&gt;Syte&lt;/a&gt;) is a
really simple but powerful packaged personal site that has social integrations
like GitHub, Dribbble, Instagram, Tumblr, Wordpress,
Linkedin, Last.fm, SoundCloud, Bitbucket, StackOverflow, Flickr.&lt;/p&gt;
&lt;h1&gt;Demo&lt;/h1&gt;
&lt;p&gt;You can see Syteup in action on &lt;a href="http://lejenome.github.io/syteup/demo"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Social Integrations&lt;/h2&gt;
&lt;h3&gt;Blog&lt;/h3&gt;
&lt;p&gt;Syteup use &lt;a href="http://tumblr.com"&gt;Tumblr&lt;/a&gt;, &lt;a href="http://wordpress.com/"&gt;Wordpress.com&lt;/a&gt;
or &lt;a href="https://www.blogger.com/"&gt;Blogger&lt;/a&gt; for blogging and your blog will be the
primary page of the site.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Syteyp Wordpress" src="https://github.com/lejenome/syteup/raw/master/docs/imgs/screenshot-blog-wordpress.png"&gt;&lt;/p&gt;
&lt;h3&gt;Social Services&lt;/h3&gt;
&lt;p&gt;Suteup currently support many different social services:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="https://github.com/"&gt;Github&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Syteyp Github" src="https://github.com/lejenome/syteup/raw/master/docs/imgs/screenshot-github.png"&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="https://www.flickr.com/"&gt;Flickr&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Syteyp Flickr" src="https://github.com/lejenome/syteup/raw/master/docs/imgs/screenshot-flickr.png"&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="https://soundcloud.com/"&gt;SoundCloud&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Syteyp SoundCloud" src="https://github.com/lejenome/syteup/raw/master/docs/imgs/screenshot-soundcloud.png"&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="http://www.last.fm/"&gt;Last.fm&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Syteyp Last.fm" src="https://github.com/lejenome/syteup/raw/master/docs/imgs/screenshot-lastfm.png"&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="http://stackoverflow.com/"&gt;StackOverflow&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Syteyp StackOverflow" src="https://github.com/lejenome/syteup/raw/master/docs/imgs/screenshot-stackoverflow.png"&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="https://bitbucket.org/"&gt;Bitbucket&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Syteyp Bitbucket" src="https://github.com/lejenome/syteup/raw/master/docs/imgs/screenshot-bitbucket.png"&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="https://dribbble.com/"&gt;Dribbble&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Syteyp Dribbble" src="https://github.com/lejenome/syteup/raw/master/docs/imgs/screenshot-dribbble.png"&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="http://instagram.com/"&gt;Instagram&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Syteyp Instagram" src="https://github.com/lejenome/syteup/raw/master/docs/imgs/screenshot-instagram.png"&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="https://www.youtube.com/"&gt;Youtube&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Syteyp Youtube" src="https://github.com/lejenome/syteup/raw/master/docs/imgs/screenshot-youtube.png"&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="https://www.linkedin.com/"&gt;LinkedIn&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Syteyp LinkedIn" src="https://github.com/lejenome/syteup/raw/master/docs/imgs/screenshot-linkedin.png"&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="https://www.facebook.com/"&gt;Facebook&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Syteyp Facebook" src="https://github.com/lejenome/syteup/raw/master/docs/imgs/screenshot-facebook.png"&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="https://plus.google.com/"&gt;Google+&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Syteyp Google+" src="https://github.com/lejenome/syteup/raw/master/docs/imgs/screenshot-gplus.png"&gt;&lt;/p&gt;
&lt;p&gt;Some other services integration is planed. For more up to date list of currently
supported services and planed services isavailable on
&lt;a href="https://github.com/lejenome/syteup/tree/master/TODO.md"&gt;TODO.md&lt;/a&gt; file.&lt;/p&gt;
&lt;p&gt;NOTE: Some services can not be supported as accessing them from client side will
give crackers full access to your account (e.g: Twitter, Foursquare) or the service provider does not support
server side requirements (e.g: neither SOP nor jsonp are supported by Steam,...),
if you want them to be implemented, ask the service provider to supported limited
permission access tokens or other needed requirements.&lt;/p&gt;
&lt;h2&gt;Installation&lt;/h2&gt;
&lt;p&gt;Syteup dose not require  any specific server side future as it is server-less
moder HTML5 webapp.&lt;/p&gt;
&lt;p&gt;First, you need to setup Syteup requirements by runnig the following commands:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;npm install
bower update
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;then, you needs to rename
&lt;a href="https://github.com/lejenome/syteup/tree/master/src/config.json.sample"&gt;src/config.json.sample&lt;/a&gt;
file to &lt;code&gt;config.json&lt;/code&gt; and customize it for your needs as explained on the
flowing section then run&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;npm run dist
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;which will update the
&lt;a href="https://github.com/lejenome/syteup/blob/master/dist/"&gt;dist/&lt;/a&gt;
folder with your new settings. Then copy the contents of &lt;a href="https://github.com/lejenome/syteup/blob/master/dist/"&gt;dist/&lt;/a&gt;
folder to you server and then everything is ready.&lt;/p&gt;
&lt;p&gt;You can also use make command for custom src and dist folder and config file
too.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;make -j1 &lt;span class="nv"&gt;SRC&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;~/syteup/src &lt;span class="nv"&gt;DIST&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/srv/website/www &lt;span class="nv"&gt;CONF&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;~/my_config.json
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Setup&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;IN PROGRESS&lt;/strong&gt;&lt;/p&gt;
&lt;h3&gt;General Setup&lt;/h3&gt;
&lt;p&gt;Change all avatars images on &lt;a href="https://github.com/lejenome/syteup/raw/master/src/imgs"&gt;src/imgs&lt;/a&gt; folder (pic.png, favicon.ico,
apple-touch-icon*.png) by your avatar images with same sizes.&lt;/p&gt;
&lt;p&gt;Setup the options of &lt;code&gt;fields&lt;/code&gt; object on &lt;code&gt;config.json&lt;/code&gt; file&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;fields&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="s2"&gt;&amp;quot;username&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;// the pseudonym (nickname) you mostly known by&lt;/span&gt;
  &lt;span class="s2"&gt;&amp;quot;realname&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;// your complete real name&lt;/span&gt;
  &lt;span class="s2"&gt;&amp;quot;description&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;// a very short &amp;#39;About Me&amp;#39; line&lt;/span&gt;
  &lt;span class="s2"&gt;&amp;quot;url&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;// the url of your website&lt;/span&gt;
  &lt;span class="s2"&gt;&amp;quot;contact&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;email&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;// your email&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;mobile&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;// [optional] your phone number e.g: (216) 00000000&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;tel&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;// [optional] your telephone number e.g: (216) 00000000&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;fax&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;// [optional] your fax number e.g: (216) 1111111&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;address&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;// [optional] just a short address e.g: Texas, USA&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;pgp_url&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;// [optional] url of your public pgp key file on your site e.g: /pubkey.asc&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;fingerprint&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;// [optional] your pgp key fingerprint e.g: 3A1D ADDD 332D 2EFB F816  21C3 84D8 5721 7365 9C9D&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;ssh_url&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt; &lt;span class="c1"&gt;// [optional] your ssh public certificate file url on your site e.g: /id_rsa.pub&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Blog Setup&lt;/h3&gt;
&lt;p&gt;Set &lt;code&gt;blog_platform&lt;/code&gt; to the bloggin platform that you will use, availbale platforms
are &lt;strong&gt;"tumblr"&lt;/strong&gt; and &lt;strong&gt;"blogger"&lt;/strong&gt; and &lt;strong&gt;"wordpress"&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Next, you need to setup the options of the choosen platform on the
&lt;code&gt;blogs_settings.&amp;lt;platform_name&amp;gt;&lt;/code&gt; object as follow:&lt;/p&gt;
&lt;h4&gt;Wordpress&lt;/h4&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;wordpress&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="s2"&gt;&amp;quot;blog_url&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;// the url of your wordpress.com blog&lt;/span&gt;
  &lt;span class="s2"&gt;&amp;quot;tag_slug&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt; &lt;span class="c1"&gt;// [optional] tags of posts to import (space separated)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;Blogger&lt;/h4&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;blogger&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="s2"&gt;&amp;quot;blog_url&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;// your blog url&lt;/span&gt;
  &lt;span class="s2"&gt;&amp;quot;blog_id&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;// your blog id number (you can use https://developers.google.com/apis-explorer/#p/blogger/v3/blogger.blogs.getByUrl)&lt;/span&gt;
  &lt;span class="s2"&gt;&amp;quot;api_key&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;// your api key (See Below)&lt;/span&gt;
  &lt;span class="s2"&gt;&amp;quot;tag_slug&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt; &lt;span class="c1"&gt;// [optional] tags of posts to import (comma separated)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Steps to get your &lt;code&gt;api_key&lt;/code&gt; are explained on the youtube section below.&lt;/p&gt;
&lt;h4&gt;Tumblr&lt;/h4&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;tumblr&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="s2"&gt;&amp;quot;blog_url&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;// your blog url&lt;/span&gt;
  &lt;span class="s2"&gt;&amp;quot;api_key&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;// your api key (See Below)&lt;/span&gt;
  &lt;span class="s2"&gt;&amp;quot;tag_slug&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt; &lt;span class="c1"&gt;// [optional] tag of posts to import (just one tag)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;To get your &lt;code&gt;api_key&lt;/code&gt;, register a new app &lt;a href="https://www.tumblr.com/oauth/register"&gt;here&lt;/a&gt;
with any name and your website url as the default callback url. The "OAuth
Consumer Key" of the application is your &lt;code&gt;api_key&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;Services Setup&lt;/h3&gt;
&lt;p&gt;For every service you would to enable, you should set &lt;code&gt;services.&amp;lt;service_name&amp;gt;&lt;/code&gt; on
&lt;code&gt;config.json&lt;/code&gt; file to &lt;code&gt;true&lt;/code&gt; and setup it options object
&lt;code&gt;services_settings.&amp;lt;service_name&amp;gt;&lt;/code&gt; on same file.&lt;/p&gt;
&lt;p&gt;Disabled services can safely removed from booth &lt;code&gt;services&lt;/code&gt; and
&lt;code&gt;services_settings&lt;/code&gt; objects on the config file.&lt;/p&gt;
&lt;h4&gt;Github&lt;/h4&gt;
&lt;p&gt;enable &lt;code&gt;services.github&lt;/code&gt; and configure &lt;code&gt;services_settings.github&lt;/code&gt; as follow:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;github&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="s2"&gt;&amp;quot;username&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt; &lt;span class="c1"&gt;// your username&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;StackOverflow&lt;/h4&gt;
&lt;p&gt;enable &lt;code&gt;services.stackoverflow&lt;/code&gt; and configure &lt;code&gt;services_settings.stackoverflow&lt;/code&gt; as follow:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;stackoverflow&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="s2"&gt;&amp;quot;username&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;// your username&lt;/span&gt;
  &lt;span class="s2"&gt;&amp;quot;user_id&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt; &lt;span class="c1"&gt;// your user id number&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;Flickr&lt;/h4&gt;
&lt;p&gt;enable &lt;code&gt;services.flickr&lt;/code&gt; and configure &lt;code&gt;services_settings.flickr&lt;/code&gt; as follow:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;flickr&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="s2"&gt;&amp;quot;username&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;// your username&lt;/span&gt;
  &lt;span class="s2"&gt;&amp;quot;user_id&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt; &lt;span class="c1"&gt;// your user id (you can get it from http://idgettr.com/)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;Bitbucket&lt;/h4&gt;
&lt;p&gt;enable &lt;code&gt;services.bitbucket&lt;/code&gt; and configure &lt;code&gt;services_settings.bitbucket&lt;/code&gt; as follow:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;bitbucket&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="s2"&gt;&amp;quot;username&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;// your username&lt;/span&gt;
  &lt;span class="s2"&gt;&amp;quot;show_forks&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;Boolean&lt;/span&gt; &lt;span class="c1"&gt;// show number of forks (It require a http request for every repository&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;SoundCloud&lt;/h4&gt;
&lt;p&gt;enable &lt;code&gt;services.soundcloud&lt;/code&gt; and configure &lt;code&gt;services_settings.soundcloud&lt;/code&gt; as follow:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;soundcloud&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="s2"&gt;&amp;quot;username&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;// your username&lt;/span&gt;
  &lt;span class="s2"&gt;&amp;quot;client_id&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;// your client_id (See Below)&lt;/span&gt;
  &lt;span class="s2"&gt;&amp;quot;show_artwork&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;Boolean&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;// show tracks artworks&lt;/span&gt;
  &lt;span class="s2"&gt;&amp;quot;player_color&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt; &lt;span class="c1"&gt;// color of tracks player&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;To get an &lt;code&gt;client_id&lt;/code&gt;, register an app &lt;a href="http://soundcloud.com/you/apps"&gt;here&lt;/a&gt;
with any name you want, after you accept their Developer Policies, you get your
Client ID.&lt;/p&gt;
&lt;h4&gt;Last.fm&lt;/h4&gt;
&lt;p&gt;enable &lt;code&gt;services.lastfm&lt;/code&gt; and configure &lt;code&gt;services_settings.lastfm&lt;/code&gt; as follow:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;lastfm&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="s2"&gt;&amp;quot;username&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;// your username&lt;/span&gt;
  &lt;span class="s2"&gt;&amp;quot;api_key&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt; &lt;span class="c1"&gt;// your api key (See Below)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;To get an &lt;code&gt;api_key&lt;/code&gt;, register a non comercial account
&lt;a href="http://www.last.fm/api/account/create"&gt;here&lt;/a&gt; with any name and a small
description, then you will get your API Key.&lt;/p&gt;
&lt;h4&gt;Dribbble&lt;/h4&gt;
&lt;p&gt;enable &lt;code&gt;services.dribbble&lt;/code&gt; and configure &lt;code&gt;services_settings.dribbble&lt;/code&gt; as follow:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;dribbble&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="s2"&gt;&amp;quot;username&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt; &lt;span class="c1"&gt;// your username&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;Youtube&lt;/h4&gt;
&lt;p&gt;enable &lt;code&gt;services.youtube&lt;/code&gt; and configure &lt;code&gt;services_settings.youtube&lt;/code&gt; as follow:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;youtube&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="s2"&gt;&amp;quot;username&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;// your username&lt;/span&gt;
  &lt;span class="s2"&gt;&amp;quot;api_key&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt; &lt;span class="c1"&gt;// your api key (See Below)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;To get an &lt;code&gt;api_key&lt;/code&gt;, create a project
&lt;a href="https://console.developers.google.com/"&gt;here&lt;/a&gt; with any name then click "Enable
an API" and enable the API you need ("YouTube Data API v3" for YouTube,
"Blogger API v3" for Blogger, "Google+ API" for Google+). Then on "Cendentials"
tab, click "Create a new Key" then "Browser Key" and enter your website url then
"Create" to get your API KEY.&lt;/p&gt;
&lt;h4&gt;Google+&lt;/h4&gt;
&lt;p&gt;enable &lt;code&gt;services.gplus&lt;/code&gt; and configure &lt;code&gt;services_settings.gplus&lt;/code&gt; as follow:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;gplus&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="s2"&gt;&amp;quot;user_id&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;// your user id number&lt;/span&gt;
  &lt;span class="s2"&gt;&amp;quot;api_key&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt; &lt;span class="c1"&gt;// your api key (See Below)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Steps to get your &lt;code&gt;api_key&lt;/code&gt; are explained on the youtube section above.&lt;/p&gt;
&lt;h4&gt;Facebook&lt;/h4&gt;
&lt;p&gt;enable &lt;code&gt;services.facebook&lt;/code&gt; and configure &lt;code&gt;services_settings.facebook&lt;/code&gt; as follow:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;facebook&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="s2"&gt;&amp;quot;username&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;// your username&lt;/span&gt;
  &lt;span class="s2"&gt;&amp;quot;access_token&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt; &lt;span class="c1"&gt;// your access token key (See Below)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;to get you read only &lt;code&gt;access_token&lt;/code&gt;, create a web application
&lt;a href="https://developers.facebook.com/quickstarts/?platform=web"&gt;here&lt;/a&gt;. Then, choose
it from "Application" menu from this
&lt;a href="https://developers.facebook.com/tools/explorer/"&gt;page&lt;/a&gt; and click "Get Access
Token" and select booth "user_activities", "user_about_me" and "user_status".
After confirming, you will get your final &lt;code&gt;access_token&lt;/code&gt; on the Access Token
field.&lt;/p&gt;
&lt;h4&gt;Instagram&lt;/h4&gt;
&lt;p&gt;enable &lt;code&gt;services.instagram&lt;/code&gt; and configure &lt;code&gt;services_settings.instagram&lt;/code&gt; as follow:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;instagram&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="s2"&gt;&amp;quot;username&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;// your username&lt;/span&gt;
  &lt;span class="s2"&gt;&amp;quot;access_token&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;// your access token key (TODO: NEED MORE DOCUMENTATION)&lt;/span&gt;
  &lt;span class="s2"&gt;&amp;quot;user_id&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt; &lt;span class="c1"&gt;// your user id number&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;LinkedIn&lt;/h4&gt;
&lt;p&gt;enable &lt;code&gt;services.linkedin&lt;/code&gt; and configure &lt;code&gt;services_settings.linkedin&lt;/code&gt; as follow:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;linkedin&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="s2"&gt;&amp;quot;username&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;// your username&lt;/span&gt;
  &lt;span class="s2"&gt;&amp;quot;access_token&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt; &lt;span class="c1"&gt;// your access token key (See Below)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;To get your read only &lt;code&gt;access_token&lt;/code&gt;, register a new app
&lt;a href="https://www.linkedin.com/secure/developer"&gt;here&lt;/a&gt;. Select "r_basicprofile" and
"r_fullprofile" as your default scopes and add
&lt;code&gt;http://lejenome.me/tests/syteup-settings/linkedin.html?client_id=&amp;lt;YOUR_API_KEY&amp;gt;&amp;amp;client_secret=&amp;lt;YOUR_SECRET_API&amp;gt;&lt;/code&gt;
to "OAuth 2.0 Redirect URLs" after replacing the two parameters with your
API Key and your Secret Key. Then use this
&lt;a href="http://lejenome.me//tests/syteup-settings/linkedin.html"&gt;link&lt;/a&gt; to request your access token.&lt;/p&gt;
&lt;h3&gt;Plugins setup&lt;/h3&gt;
&lt;p&gt;Enabling a plugin depend on the type of plugin, either it's a generic plugin or
a blog plugin. For generic plugins, set &lt;code&gt;plugins.&amp;lt;plugin_name&amp;gt;&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt;. and
for blogs plugins, set &lt;code&gt;blogs_settings.plugins.&amp;lt;plugin_name&amp;gt;&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Settings of every plugin are availbale on the &lt;code&gt;plugins_settings.&amp;lt;plugin_name&amp;gt;&lt;/code&gt;
object on &lt;code&gt;config.json&lt;/code&gt; file as follow:&lt;/p&gt;
&lt;h4&gt;Disqus&lt;/h4&gt;
&lt;p&gt;This plugin will enable disqus comments on every post. Just
enable &lt;code&gt;blogs_settings.plugins.disqus&lt;/code&gt; and configure &lt;code&gt;plugins_settings.disqus&lt;/code&gt; as follow:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;disqus&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="s2"&gt;&amp;quot;url&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;// [optional] your disqus profile url&lt;/span&gt;
  &lt;span class="s2"&gt;&amp;quot;shortname&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;// your username&lt;/span&gt;
  &lt;span class="s2"&gt;&amp;quot;just_count&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;Boolean&lt;/span&gt; &lt;span class="c1"&gt;// [optional] just show the number of comments instead of the &amp;#39;Show Comments&amp;#39; buttons&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;ShareThis&lt;/h4&gt;
&lt;p&gt;This plugin will add ShareThis widget to every post. Just
enable &lt;code&gt;blogs_settings.plugins.sharethis&lt;/code&gt; and configure &lt;code&gt;plugins_settings.sharethis&lt;/code&gt;
as follow:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;sharethis&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="s2"&gt;&amp;quot;publisher_key&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt; &lt;span class="c1"&gt;// your key&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;RSS&lt;/h4&gt;
&lt;p&gt;This plugin will add RSS entry that any browser can subscribe to. Just
enable &lt;code&gt;plugins.rss&lt;/code&gt; and configure &lt;code&gt;plugins_settings.rss&lt;/code&gt; as follow:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;rss&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="s2"&gt;&amp;quot;url&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt; &lt;span class="c1"&gt;// the url of your rss feed file or an external rss feed from your blog platform&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;Google Analytics&lt;/h4&gt;
&lt;p&gt;This plugin will enable Google Analytics tracking. Just
enable &lt;code&gt;plugins.google_analytics&lt;/code&gt; and configure &lt;code&gt;plugins_settings.google_analytics&lt;/code&gt;
 as follow:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;google_analytics&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="s2"&gt;&amp;quot;tracking_id&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt; &lt;span class="c1"&gt;// your tracking id e.g: UA-XXXXXXX-2&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;Woopra&lt;/h4&gt;
&lt;p&gt;This plugin will enable Woopra tracking. Just
enable &lt;code&gt;plugins.woopra&lt;/code&gt; and configure &lt;code&gt;plugins_settings.woopra&lt;/code&gt; as follow:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;woopra&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="s2"&gt;&amp;quot;tracking_domain&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;// TODO&lt;/span&gt;
  &lt;span class="s2"&gt;&amp;quot;idle_timeout&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;Number&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;// TODO&lt;/span&gt;
  &lt;span class="s2"&gt;&amp;quot;include_query&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;Boolean&lt;/span&gt; &lt;span class="c1"&gt;// TODO&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;Segment&lt;/h4&gt;
&lt;p&gt;This plugin will enable Segment services. Just
enable &lt;code&gt;plugins.segment&lt;/code&gt; and configure &lt;code&gt;plugins_settings.segment&lt;/code&gt; as follow:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;segment&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="s2"&gt;&amp;quot;write_key&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt; &lt;span class="c1"&gt;// your write key&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;Gratipay Widget&lt;/h4&gt;
&lt;p&gt;This plugin will add Gratupay widget bollow the navigation menu. Just
enable &lt;code&gt;plugins.gratipay_widget&lt;/code&gt; and configure &lt;code&gt;plugins_settings.gratipay_widget&lt;/code&gt;
as follow:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;gratipay_widget&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="s2"&gt;&amp;quot;username&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt; &lt;span class="c1"&gt;// your gratipay username&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
  </channel>
</rss>